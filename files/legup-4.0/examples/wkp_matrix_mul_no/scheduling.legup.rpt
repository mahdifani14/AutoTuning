//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jun 19 18:41:14 2016
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Thu Dec  8 15:28:12 2016
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: main
state: LEGUP_0
   br label %.preheader1
   Transition: if (start): LEGUP_F_main_BB_preheader1_1 default: LEGUP_0
state: LEGUP_F_main_BB_preheader1_1
   %count.05 = phi i64 [ 0, %0 ], [ %8, %10 ] (endState: LEGUP_F_main_BB_preheader1_1)
   %i.04 = phi i32 [ 0, %0 ], [ %11, %10 ] (endState: LEGUP_F_main_BB_preheader1_1)
   br label %.preheader
   Transition: default: LEGUP_F_main_BB_preheader_2
state: LEGUP_F_main_BB_preheader_2
   %count.13 = phi i64 [ %count.05, %.preheader1 ], [ %8, %multiply.exit ] (endState: LEGUP_F_main_BB_preheader_2)
   %j.02 = phi i32 [ 0, %.preheader1 ], [ %9, %multiply.exit ] (endState: LEGUP_F_main_BB_preheader_2)
   %scevgep5 = getelementptr [20 x [20 x i32]]* @resultAB1, i32 0, i32 %i.04, i32 %j.02 (endState: LEGUP_F_main_BB_preheader_2)
   br label %1
   Transition: default: LEGUP_F_main_BB__1_3
state: LEGUP_F_main_BB__1_3
   %sum.02.i = phi i32 [ %5, %1 ], [ 0, %.preheader ] (endState: LEGUP_F_main_BB__1_3)
   %k.01.i = phi i32 [ %6, %1 ], [ 0, %.preheader ] (endState: LEGUP_F_main_BB__1_3)
   %scevgep2 = getelementptr [20 x [20 x i32]]* @A1, i32 0, i32 %i.04, i32 %k.01.i (endState: LEGUP_F_main_BB__1_3)
   %scevgep = getelementptr [20 x [20 x i32]]* @B1, i32 0, i32 %k.01.i, i32 %j.02 (endState: LEGUP_F_main_BB__1_3)
   %2 = load volatile i32* %scevgep2, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__1_5)
   %3 = load volatile i32* %scevgep, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__1_5)
   %6 = add nsw i32 %k.01.i, 1 (endState: LEGUP_F_main_BB__1_3)
   %exitcond1 = icmp eq i32 %6, 20 (endState: LEGUP_F_main_BB__1_3)
   Transition: default: LEGUP_F_main_BB__1_4
state: LEGUP_F_main_BB__1_4
   Transition: default: LEGUP_F_main_BB__1_5
state: LEGUP_F_main_BB__1_5
   %4 = mul nsw i32 %3, %2 (endState: LEGUP_F_main_BB__1_6)
   Transition: default: LEGUP_F_main_BB__1_6
state: LEGUP_F_main_BB__1_6
   %5 = add nsw i32 %4, %sum.02.i (endState: LEGUP_F_main_BB__1_6)
   br i1 %exitcond1, label %multiply.exit, label %1
   Transition: if (%exitcond1): LEGUP_F_main_BB_multiplyexit_7 default: LEGUP_F_main_BB__1_3
state: LEGUP_F_main_BB_multiplyexit_7
   store volatile i32 %5, i32* %scevgep5, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_multiplyexit_8)
   %7 = sext i32 %5 to i64 (endState: LEGUP_F_main_BB_multiplyexit_7)
   %8 = add i64 %7, %count.13 (endState: LEGUP_F_main_BB_multiplyexit_7)
   %9 = add nsw i32 %j.02, 1 (endState: LEGUP_F_main_BB_multiplyexit_7)
   %exitcond3 = icmp eq i32 %9, 20 (endState: LEGUP_F_main_BB_multiplyexit_7)
   Transition: default: LEGUP_F_main_BB_multiplyexit_8
state: LEGUP_F_main_BB_multiplyexit_8
   br i1 %exitcond3, label %10, label %.preheader
   Transition: if (%exitcond3): LEGUP_F_main_BB__10_9 default: LEGUP_F_main_BB_preheader_2
state: LEGUP_F_main_BB__10_9
   %11 = add nsw i32 %i.04, 1 (endState: LEGUP_F_main_BB__10_9)
   %exitcond = icmp eq i32 %11, 20 (endState: LEGUP_F_main_BB__10_9)
   br i1 %exitcond, label %12, label %.preheader1
   Transition: if (%exitcond): LEGUP_F_main_BB__12_10 default: LEGUP_F_main_BB_preheader1_1
state: LEGUP_F_main_BB__12_10
   %13 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str, i32 0, i32 0), i64 %8) #1 (endState: LEGUP_F_main_BB__12_10)
   %14 = icmp eq i64 %8, 962122000 (endState: LEGUP_F_main_BB__12_10)
   br i1 %14, label %15, label %17
   Transition: if (%14): LEGUP_F_main_BB__15_11 default: LEGUP_F_main_BB__17_12
state: LEGUP_F_main_BB__15_11
   %16 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str1, i32 0, i32 0)) #1 (endState: LEGUP_F_main_BB__15_11)
   br label %19
   Transition: default: LEGUP_F_main_BB__19_13
state: LEGUP_F_main_BB__17_12
   %18 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str2, i32 0, i32 0)) #1 (endState: LEGUP_F_main_BB__17_12)
   br label %19
   Transition: default: LEGUP_F_main_BB__19_13
state: LEGUP_F_main_BB__19_13
   %20 = trunc i64 %8 to i32 (endState: LEGUP_F_main_BB__19_13)
   ret i32 %20
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %.preheader1 Num States: 1
Basic Block: %.preheader Num States: 1
Basic Block: %1 Num States: 4
Basic Block: %multiply.exit Num States: 2
Basic Block: %10 Num States: 1
Basic Block: %12 Num States: 1
Basic Block: %15 Num States: 1
Basic Block: %17 Num States: 1
Basic Block: %19 Num States: 1
End Function: main
--------------------------------------------------------------------------------

