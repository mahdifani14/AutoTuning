//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jun 19 18:41:14 2016
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Thu Dec  8 15:13:20 2016
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: main
state: LEGUP_0
   br label %.lr.ph7.i
   Transition: if (start): LEGUP_F_main_BB_lrph7i_1 default: LEGUP_0
state: LEGUP_F_main_BB_lrph7i_1
   %i.05.i = phi i32 [ %2, %.lr.ph7.i ], [ 0, %0 ] (endState: LEGUP_F_main_BB_lrph7i_1)
   %scevgep10 = getelementptr [100 x i32]* @y, i32 0, i32 %i.05.i (endState: LEGUP_F_main_BB_lrph7i_1)
   %scevgep11 = getelementptr [100 x i32]* @input, i32 0, i32 %i.05.i (endState: LEGUP_F_main_BB_lrph7i_1)
   %1 = load i32* %scevgep11, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_lrph7i_3)
   %2 = add nsw i32 %i.05.i, 1 (endState: LEGUP_F_main_BB_lrph7i_1)
   %exitcond9 = icmp eq i32 %2, 100 (endState: LEGUP_F_main_BB_lrph7i_1)
   Transition: default: LEGUP_F_main_BB_lrph7i_2
state: LEGUP_F_main_BB_lrph7i_2
   Transition: default: LEGUP_F_main_BB_lrph7i_3
state: LEGUP_F_main_BB_lrph7i_3
   store i32 %1, i32* %scevgep10, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_lrph7i_4)
   Transition: default: LEGUP_F_main_BB_lrph7i_4
state: LEGUP_F_main_BB_lrph7i_4
   br i1 %exitcond9, label %.lr.ph.i.preheader, label %.lr.ph7.i
   Transition: if (%exitcond9): LEGUP_F_main_BB_lrphipreheader_5 default: LEGUP_F_main_BB_lrph7i_1
state: LEGUP_F_main_BB_lrphipreheader_5
   br label %.lr.ph.i
   Transition: default: LEGUP_F_main_BB_lrphi_9
state: LEGUP_F_main_BB_loopexitiloopexit_6
   br label %.loopexit.i
   Transition: default: LEGUP_F_main_BB_loopexiti_7
state: LEGUP_F_main_BB_loopexiti_7
   %exitcond5 = icmp eq i32 %7, 99 (endState: LEGUP_F_main_BB_loopexiti_7)
   br i1 %exitcond5, label %sort.exit.preheader, label %.lr.ph.i
   Transition: if (%exitcond5): LEGUP_F_main_BB_sortexitpreheader_8 default: LEGUP_F_main_BB_lrphi_9
state: LEGUP_F_main_BB_sortexitpreheader_8
   br label %sort.exit
   Transition: default: LEGUP_F_main_BB_sortexit_28
state: LEGUP_F_main_BB_lrphi_9
   %3 = phi i32 [ %7, %.loopexit.i ], [ 0, %.lr.ph.i.preheader ] (endState: LEGUP_F_main_BB_lrphi_9)
   %4 = add i32 %3, 2 (endState: LEGUP_F_main_BB_lrphi_9)
   %5 = sub i32 98, %3 (endState: LEGUP_F_main_BB_lrphi_9)
   %scevgep7 = getelementptr [100 x i32]* @y, i32 0, i32 %3 (endState: LEGUP_F_main_BB_lrphi_9)
   %6 = add i32 %3, 1 (endState: LEGUP_F_main_BB_lrphi_9)
   %7 = add nsw i32 %3, 1 (endState: LEGUP_F_main_BB_lrphi_9)
   %.pre.i = load i32* %scevgep7, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_lrphi_11)
   %exitcond.i4 = icmp eq i32 %4, 100 (endState: LEGUP_F_main_BB_lrphi_9)
   Transition: default: LEGUP_F_main_BB_lrphi_10
state: LEGUP_F_main_BB_lrphi_10
   %scevgep8 = getelementptr [100 x i32]* @y, i32 0, i32 %6 (endState: LEGUP_F_main_BB_lrphi_10)
   %8 = load i32* %scevgep8, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_lrphi_12)
   Transition: default: LEGUP_F_main_BB_lrphi_11
state: LEGUP_F_main_BB_lrphi_11
   Transition: default: LEGUP_F_main_BB_lrphi_12
state: LEGUP_F_main_BB_lrphi_12
   %9 = icmp sgt i32 %.pre.i, %8 (endState: LEGUP_F_main_BB_lrphi_12)
   %d.0.position.0.i3 = select i1 %9, i32 %6, i32 %3 (endState: LEGUP_F_main_BB_lrphi_12)
   Transition: default: LEGUP_F_main_BB_lrphi_13
state: LEGUP_F_main_BB_lrphi_13
   %10 = getelementptr inbounds [100 x i32]* @y, i32 0, i32 %d.0.position.0.i3 (endState: LEGUP_F_main_BB_lrphi_13)
   %11 = load i32* %10, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_lrphi_15)
   Transition: default: LEGUP_F_main_BB_lrphi_14
state: LEGUP_F_main_BB_lrphi_14
   Transition: default: LEGUP_F_main_BB_lrphi_15
state: LEGUP_F_main_BB_lrphi_15
   store i32 %11, i32* %scevgep7, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_lrphi_16)
   Transition: default: LEGUP_F_main_BB_lrphi_16
state: LEGUP_F_main_BB_lrphi_16
   store i32 %.pre.i, i32* %10, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_lrphi_17)
   Transition: default: LEGUP_F_main_BB_lrphi_17
state: LEGUP_F_main_BB_lrphi_17
   br i1 %exitcond.i4, label %.loopexit.i, label %._crit_edge9.i.preheader
   Transition: if (%exitcond.i4): LEGUP_F_main_BB_loopexiti_7 default: LEGUP_F_main_BB__crit_edge9ipreheader_18
state: LEGUP_F_main_BB__crit_edge9ipreheader_18
   br label %._crit_edge9.i
   Transition: default: LEGUP_F_main_BB__crit_edge9i_19
state: LEGUP_F_main_BB__crit_edge9i_19
   %indvar = phi i32 [ 0, %._crit_edge9.i.preheader ], [ %indvar.next, %._crit_edge9.i ] (endState: LEGUP_F_main_BB__crit_edge9i_19)
   %d.0.position.0.i5 = phi i32 [ %d.0.position.0.i3, %._crit_edge9.i.preheader ], [ %d.0.position.0.i, %._crit_edge9.i ] (endState: LEGUP_F_main_BB__crit_edge9i_19)
   %12 = phi i32 [ %.pre.i, %._crit_edge9.i.preheader ], [ %.pre10.i, %._crit_edge9.i ] (endState: LEGUP_F_main_BB__crit_edge9i_19)
   %13 = add i32 %4, %indvar (endState: LEGUP_F_main_BB__crit_edge9i_19)
   %.pre10.i = load i32* %scevgep7, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__crit_edge9i_21)
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_main_BB__crit_edge9i_19)
   %exitcond3 = icmp eq i32 %indvar.next, %5 (endState: LEGUP_F_main_BB__crit_edge9i_19)
   Transition: default: LEGUP_F_main_BB__crit_edge9i_20
state: LEGUP_F_main_BB__crit_edge9i_20
   %scevgep4 = getelementptr [100 x i32]* @y, i32 0, i32 %13 (endState: LEGUP_F_main_BB__crit_edge9i_20)
   %14 = load i32* %scevgep4, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__crit_edge9i_22)
   Transition: default: LEGUP_F_main_BB__crit_edge9i_21
state: LEGUP_F_main_BB__crit_edge9i_21
   Transition: default: LEGUP_F_main_BB__crit_edge9i_22
state: LEGUP_F_main_BB__crit_edge9i_22
   %15 = icmp sgt i32 %12, %14 (endState: LEGUP_F_main_BB__crit_edge9i_22)
   %d.0.position.0.i = select i1 %15, i32 %13, i32 %d.0.position.0.i5 (endState: LEGUP_F_main_BB__crit_edge9i_22)
   Transition: default: LEGUP_F_main_BB__crit_edge9i_23
state: LEGUP_F_main_BB__crit_edge9i_23
   %16 = getelementptr inbounds [100 x i32]* @y, i32 0, i32 %d.0.position.0.i (endState: LEGUP_F_main_BB__crit_edge9i_23)
   %17 = load i32* %16, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__crit_edge9i_25)
   Transition: default: LEGUP_F_main_BB__crit_edge9i_24
state: LEGUP_F_main_BB__crit_edge9i_24
   Transition: default: LEGUP_F_main_BB__crit_edge9i_25
state: LEGUP_F_main_BB__crit_edge9i_25
   store i32 %17, i32* %scevgep7, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__crit_edge9i_26)
   Transition: default: LEGUP_F_main_BB__crit_edge9i_26
state: LEGUP_F_main_BB__crit_edge9i_26
   store i32 %.pre10.i, i32* %16, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__crit_edge9i_27)
   Transition: default: LEGUP_F_main_BB__crit_edge9i_27
state: LEGUP_F_main_BB__crit_edge9i_27
   br i1 %exitcond3, label %.loopexit.i.loopexit, label %._crit_edge9.i
   Transition: if (%exitcond3): LEGUP_F_main_BB_loopexitiloopexit_6 default: LEGUP_F_main_BB__crit_edge9i_19
state: LEGUP_F_main_BB_sortexit_28
   %i.02 = phi i32 [ %20, %sort.exit ], [ 0, %sort.exit.preheader ] (endState: LEGUP_F_main_BB_sortexit_28)
   %scevgep2 = getelementptr [100 x i32]* @y, i32 0, i32 %i.02 (endState: LEGUP_F_main_BB_sortexit_28)
   %18 = load i32* %scevgep2, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_sortexit_30)
   %20 = add nsw i32 %i.02, 1 (endState: LEGUP_F_main_BB_sortexit_28)
   %exitcond = icmp eq i32 %20, 100 (endState: LEGUP_F_main_BB_sortexit_28)
   Transition: default: LEGUP_F_main_BB_sortexit_29
state: LEGUP_F_main_BB_sortexit_29
   Transition: default: LEGUP_F_main_BB_sortexit_30
state: LEGUP_F_main_BB_sortexit_30
   %19 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0), i32 %18) #1 (endState: LEGUP_F_main_BB_sortexit_30)
   br i1 %exitcond, label %21, label %sort.exit
   Transition: if (%exitcond): LEGUP_F_main_BB__21_31 default: LEGUP_F_main_BB_sortexit_28
state: LEGUP_F_main_BB__21_31
   %22 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str1, i32 0, i32 0)) #1 (endState: LEGUP_F_main_BB__21_31)
   br label %23
   Transition: default: LEGUP_F_main_BB__23_32
state: LEGUP_F_main_BB__23_32
   %i.11 = phi i32 [ 0, %21 ], [ %26, %23 ] (endState: LEGUP_F_main_BB__23_32)
   %scevgep = getelementptr [100 x i32]* @correctOutput, i32 0, i32 %i.11 (endState: LEGUP_F_main_BB__23_32)
   %24 = load i32* %scevgep, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__23_34)
   %26 = add nsw i32 %i.11, 1 (endState: LEGUP_F_main_BB__23_32)
   %exitcond1 = icmp eq i32 %26, 100 (endState: LEGUP_F_main_BB__23_32)
   Transition: default: LEGUP_F_main_BB__23_33
state: LEGUP_F_main_BB__23_33
   Transition: default: LEGUP_F_main_BB__23_34
state: LEGUP_F_main_BB__23_34
   %25 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0), i32 %24) #1 (endState: LEGUP_F_main_BB__23_34)
   br i1 %exitcond1, label %27, label %23
   Transition: if (%exitcond1): LEGUP_F_main_BB__27_35 default: LEGUP_F_main_BB__23_32
state: LEGUP_F_main_BB__27_35
   ret i32 0
   Transition: default: LEGUP_0

Basic Block: %.lr.ph7.i Num States: 4
Basic Block: %.lr.ph.i.preheader Num States: 1
Basic Block: %.loopexit.i.loopexit Num States: 1
Basic Block: %.loopexit.i Num States: 1
Basic Block: %sort.exit.preheader Num States: 1
Basic Block: %.lr.ph.i Num States: 9
Basic Block: %._crit_edge9.i.preheader Num States: 1
Basic Block: %._crit_edge9.i Num States: 9
Basic Block: %0 Num States: 1
Basic Block: %sort.exit Num States: 3
Basic Block: %21 Num States: 1
Basic Block: %23 Num States: 3
Basic Block: %27 Num States: 1
End Function: main
--------------------------------------------------------------------------------

