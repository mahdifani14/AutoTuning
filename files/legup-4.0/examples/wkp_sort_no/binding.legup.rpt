//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jun 19 18:41:14 2016
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Thu Dec  8 15:13:20 2016
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 1                             

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB_lrph7i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  %1 = load i32* %scevgep11, a... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %1 = load i32* %scevgep11, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %1 = load i32* %scevgep11, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_lrph7i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %1, i32* %scevgep1... (idx: 0)        21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %1, i32* %scevgep1... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %1, i32* %scevgep1... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB_lrphi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre.i = load i32* %scevgep... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %.pre.i = load i32* %scevgep... (idx: 0)        8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %.pre.i = load i32* %scevgep... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre.i = load i32* %scevgep... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_lrphi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %8 = load i32* %scevgep8, al... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %8 = load i32* %scevgep8, al... (idx: 0)        9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %8 = load i32* %scevgep8, al... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %8 = load i32* %scevgep8, al... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB_lrphi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %11 = load i32* %10, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %11 = load i32* %10, align 4... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %11 = load i32* %10, align 4... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %11 = load i32* %10, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB_lrphi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %11, i32* %scevgep... can share an input with another operation already assigned to main_mem_dual_port_0
  store i32 %11, i32* %scevgep... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %11, i32* %scevgep... (idx: 0)        11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %11, i32* %scevgep... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %11, i32* %scevgep... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_main_BB_lrphi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %.pre.i, i32* %10,... can share an input with another operation already assigned to main_mem_dual_port_0
  store i32 %.pre.i, i32* %10,... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %.pre.i, i32* %10,... (idx: 0)        12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %.pre.i, i32* %10,... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %.pre.i, i32* %10,... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB__crit_edge9i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre10.i = load i32* %scevg... can share an input with another operation already assigned to main_mem_dual_port_0
  %.pre10.i = load i32* %scevg... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %.pre10.i = load i32* %scevg... (idx: 0)        3                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %.pre10.i = load i32* %scevg... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre10.i = load i32* %scevg... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB__crit_edge9i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %14 = load i32* %scevgep4, a... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %14 = load i32* %scevgep4, a... (idx: 0)        13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %14 = load i32* %scevgep4, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %14 = load i32* %scevgep4, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 9)
State: LEGUP_F_main_BB__crit_edge9i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %17 = load i32* %16, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %17 = load i32* %16, align 4... (idx: 0)        14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %17 = load i32* %16, align 4... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %17 = load i32* %16, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_main_BB__crit_edge9i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %17, i32* %scevgep... can share an input with another operation already assigned to main_mem_dual_port_0
  store i32 %17, i32* %scevgep... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %17, i32* %scevgep... (idx: 0)        15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %17, i32* %scevgep... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %17, i32* %scevgep... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 11)
State: LEGUP_F_main_BB__crit_edge9i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %.pre10.i, i32* %1... can share an input with another operation already assigned to main_mem_dual_port_0
  store i32 %.pre10.i, i32* %1... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %.pre10.i, i32* %1... (idx: 0)        16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %.pre10.i, i32* %1... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %.pre10.i, i32* %1... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
State: LEGUP_F_main_BB_sortexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %18 = load i32* %scevgep2, a... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %18 = load i32* %scevgep2, a... (idx: 0)        17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %18 = load i32* %scevgep2, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %18 = load i32* %scevgep2, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 13)
State: LEGUP_F_main_BB__23
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %24 = load i32* %scevgep, al... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %24 = load i32* %scevgep, al... (idx: 0)        18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %24 = load i32* %scevgep, al... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %24 = load i32* %scevgep, al... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 14)

