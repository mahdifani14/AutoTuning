digraph {
Node0x3c33860[label="  %2 = load i32* %dlti, align 4, !tbaa !..."];
Node0x3c33860 -> Node0x3c33860[label="D:0.00ns L:2",color=blue];
Node0x3d49b70[label="  store i32 %10, i32* %bli, align 4, !tb..."];
Node0x3c33860 -> Node0x3d49b70[label="D:0.00ns L:2",color=red];
Node0x3d4a730[label="  store i32 %21, i32* %17, align 4, !tba..."];
Node0x3c33860 -> Node0x3d4a730[label="D:0.00ns L:2",color=red];
Node0x3d4b2b0[label="  store i32 %32, i32* %28, align 4, !tba..."];
Node0x3c33860 -> Node0x3d4b2b0[label="D:0.00ns L:2",color=red];
Node0x3d4bdf0[label="  store i32 %43, i32* %39, align 4, !tba..."];
Node0x3c33860 -> Node0x3d4bdf0[label="D:0.00ns L:2",color=red];
Node0x3d4cd40[label="  store i32 %54, i32* %50, align 4, !tba..."];
Node0x3c33860 -> Node0x3d4cd40[label="D:0.00ns L:2",color=red];
Node0x3d4d880[label="  store i32 %65, i32* %61, align 4, !tba..."];
Node0x3c33860 -> Node0x3d4d880[label="D:0.00ns L:2",color=red];
Node0x3c33120[label="  %3 = mul nsw i32 %2, %dlt"];
Node0x3c33120 -> Node0x3c33120[label="D:2.59ns L:1",color=blue];
Node0x3d49210[label="  %4 = ashr i32 %3, 31"];
Node0x3d49210 -> Node0x3d49210[label="D:0.00ns L:0",color=blue];
Node0x3d492f0[label="  %5 = and i32 %4, -256"];
Node0x3d492f0 -> Node0x3d492f0[label="D:0.00ns L:0",color=blue];
Node0x3d493d0[label="  %6 = or i32 %5, 128"];
Node0x3d493d0 -> Node0x3d493d0[label="D:0.00ns L:0",color=blue];
Node0x3d49740[label="  %7 = load i32* %bli, align 4, !tbaa !1"];
Node0x3d49740 -> Node0x3d49740[label="D:0.00ns L:2",color=blue];
Node0x3d49740 -> Node0x3d49b70[label="D:0.00ns L:2",color=red];
Node0x3d49820[label="  %8 = mul nsw i32 %7, 255"];
Node0x3d49820 -> Node0x3d49820[label="D:2.59ns L:1",color=blue];
Node0x3d49980[label="  %9 = ashr i32 %8, 8"];
Node0x3d49980 -> Node0x3d49980[label="D:0.00ns L:0",color=blue];
Node0x3d49a60[label="  %10 = add nsw i32 %6, %9"];
Node0x3d49a60 -> Node0x3d49a60[label="D:2.50ns L:0",color=blue];
Node0x3d49db0[label="  %12 = load i32* %11, align 4, !tbaa !1"];
Node0x3d49b70 -> Node0x3d49db0[label="D:20.00ns L:1",color=red];
Node0x3d4a970[label="  %23 = load i32* %22, align 4, !tbaa !1"];
Node0x3d49b70 -> Node0x3d4a970[label="D:20.00ns L:1",color=red];
Node0x3d4b470[label="  %34 = load i32* %33, align 4, !tbaa !1"];
Node0x3d49b70 -> Node0x3d4b470[label="D:20.00ns L:1",color=red];
Node0x3d48ee0[label="  %45 = load i32* %44, align 4, !tbaa !1"];
Node0x3d49b70 -> Node0x3d48ee0[label="D:20.00ns L:1",color=red];
Node0x3d4cf00[label="  %56 = load i32* %55, align 4, !tbaa !1"];
Node0x3d49b70 -> Node0x3d4cf00[label="D:20.00ns L:1",color=red];
Node0x3d49c50[label="  %11 = getelementptr inbounds i32* %dlt..."];
Node0x3d49c50 -> Node0x3d49c50[label="D:0.00ns L:0",color=blue];
Node0x3d49c50 -> Node0x3d49c50[label="D:0.00ns L:0",color=blue];
Node0x3d49db0 -> Node0x3d49db0[label="D:0.00ns L:2",color=blue];
Node0x3d49db0 -> Node0x3d4a730[label="D:0.00ns L:2",color=red];
Node0x3d49db0 -> Node0x3d4b2b0[label="D:0.00ns L:2",color=red];
Node0x3d49db0 -> Node0x3d4bdf0[label="D:0.00ns L:2",color=red];
Node0x3d49db0 -> Node0x3d4cd40[label="D:0.00ns L:2",color=red];
Node0x3d49db0 -> Node0x3d4d880[label="D:0.00ns L:2",color=red];
Node0x3d49e90[label="  %13 = mul nsw i32 %12, %dlt"];
Node0x3d49e90 -> Node0x3d49e90[label="D:2.59ns L:1",color=blue];
Node0x3d4a000[label="  %14 = ashr i32 %13, 31"];
Node0x3d4a000 -> Node0x3d4a000[label="D:0.00ns L:0",color=blue];
Node0x3d4a0e0[label="  %15 = and i32 %14, -256"];
Node0x3d4a0e0 -> Node0x3d4a0e0[label="D:0.00ns L:0",color=blue];
Node0x3d4a1c0[label="  %16 = or i32 %15, 128"];
Node0x3d4a1c0 -> Node0x3d4a1c0[label="D:0.00ns L:0",color=blue];
Node0x3d4a2a0[label="  %17 = getelementptr inbounds i32* %bli..."];
Node0x3d4a2a0 -> Node0x3d4a2a0[label="D:0.00ns L:0",color=blue];
Node0x3d4a2a0 -> Node0x3d4a2a0[label="D:0.00ns L:0",color=blue];
Node0x3d4a380[label="  %18 = load i32* %17, align 4, !tbaa !1"];
Node0x3d4a380 -> Node0x3d4a380[label="D:0.00ns L:2",color=blue];
Node0x3d4a380 -> Node0x3d4a730[label="D:0.00ns L:2",color=red];
Node0x3d4a460[label="  %19 = mul nsw i32 %18, 255"];
Node0x3d4a460 -> Node0x3d4a460[label="D:2.59ns L:1",color=blue];
Node0x3d4a540[label="  %20 = ashr i32 %19, 8"];
Node0x3d4a540 -> Node0x3d4a540[label="D:0.00ns L:0",color=blue];
Node0x3d4a620[label="  %21 = add nsw i32 %16, %20"];
Node0x3d4a620 -> Node0x3d4a620[label="D:2.50ns L:0",color=blue];
Node0x3d4a730 -> Node0x3d4a970[label="D:20.00ns L:1",color=red];
Node0x3d4a730 -> Node0x3d4b470[label="D:20.00ns L:1",color=red];
Node0x3d4a730 -> Node0x3d48ee0[label="D:20.00ns L:1",color=red];
Node0x3d4a730 -> Node0x3d4cf00[label="D:20.00ns L:1",color=red];
Node0x3d4a810[label="  %22 = getelementptr inbounds i32* %dlt..."];
Node0x3d4a810 -> Node0x3d4a810[label="D:0.00ns L:0",color=blue];
Node0x3d4a810 -> Node0x3d4a810[label="D:0.00ns L:0",color=blue];
Node0x3d4a970 -> Node0x3d4a970[label="D:0.00ns L:2",color=blue];
Node0x3d4a970 -> Node0x3d4b2b0[label="D:0.00ns L:2",color=red];
Node0x3d4a970 -> Node0x3d4bdf0[label="D:0.00ns L:2",color=red];
Node0x3d4a970 -> Node0x3d4cd40[label="D:0.00ns L:2",color=red];
Node0x3d4a970 -> Node0x3d4d880[label="D:0.00ns L:2",color=red];
Node0x3d4aa50[label="  %24 = mul nsw i32 %23, %dlt"];
Node0x3d4aa50 -> Node0x3d4aa50[label="D:2.59ns L:1",color=blue];
Node0x3d4ab70[label="  %25 = ashr i32 %24, 31"];
Node0x3d4ab70 -> Node0x3d4ab70[label="D:0.00ns L:0",color=blue];
Node0x3d4ac50[label="  %26 = and i32 %25, -256"];
Node0x3d4ac50 -> Node0x3d4ac50[label="D:0.00ns L:0",color=blue];
Node0x3d4ad30[label="  %27 = or i32 %26, 128"];
Node0x3d4ad30 -> Node0x3d4ad30[label="D:0.00ns L:0",color=blue];
Node0x3d4ae10[label="  %28 = getelementptr inbounds i32* %bli..."];
Node0x3d4ae10 -> Node0x3d4ae10[label="D:0.00ns L:0",color=blue];
Node0x3d4ae10 -> Node0x3d4ae10[label="D:0.00ns L:0",color=blue];
Node0x3d4aef0[label="  %29 = load i32* %28, align 4, !tbaa !1"];
Node0x3d4aef0 -> Node0x3d4aef0[label="D:0.00ns L:2",color=blue];
Node0x3d4aef0 -> Node0x3d4b2b0[label="D:0.00ns L:2",color=red];
Node0x3d4afd0[label="  %30 = mul nsw i32 %29, 255"];
Node0x3d4afd0 -> Node0x3d4afd0[label="D:2.59ns L:1",color=blue];
Node0x3d4b0f0[label="  %31 = ashr i32 %30, 8"];
Node0x3d4b0f0 -> Node0x3d4b0f0[label="D:0.00ns L:0",color=blue];
Node0x3d4b1d0[label="  %32 = add nsw i32 %27, %31"];
Node0x3d4b1d0 -> Node0x3d4b1d0[label="D:2.50ns L:0",color=blue];
Node0x3d4b2b0 -> Node0x3d4b470[label="D:20.00ns L:1",color=red];
Node0x3d4b2b0 -> Node0x3d48ee0[label="D:20.00ns L:1",color=red];
Node0x3d4b2b0 -> Node0x3d4cf00[label="D:20.00ns L:1",color=red];
Node0x3d4b390[label="  %33 = getelementptr inbounds i32* %dlt..."];
Node0x3d4b390 -> Node0x3d4b390[label="D:0.00ns L:0",color=blue];
Node0x3d4b390 -> Node0x3d4b390[label="D:0.00ns L:0",color=blue];
Node0x3d4b470 -> Node0x3d4b470[label="D:0.00ns L:2",color=blue];
Node0x3d4b470 -> Node0x3d4bdf0[label="D:0.00ns L:2",color=red];
Node0x3d4b470 -> Node0x3d4cd40[label="D:0.00ns L:2",color=red];
Node0x3d4b470 -> Node0x3d4d880[label="D:0.00ns L:2",color=red];
Node0x3d4b550[label="  %35 = mul nsw i32 %34, %dlt"];
Node0x3d4b550 -> Node0x3d4b550[label="D:2.59ns L:1",color=blue];
Node0x3d4b6b0[label="  %36 = ashr i32 %35, 31"];
Node0x3d4b6b0 -> Node0x3d4b6b0[label="D:0.00ns L:0",color=blue];
Node0x3d4b790[label="  %37 = and i32 %36, -256"];
Node0x3d4b790 -> Node0x3d4b790[label="D:0.00ns L:0",color=blue];
Node0x3d4b870[label="  %38 = or i32 %37, 128"];
Node0x3d4b870 -> Node0x3d4b870[label="D:0.00ns L:0",color=blue];
Node0x3d4b950[label="  %39 = getelementptr inbounds i32* %bli..."];
Node0x3d4b950 -> Node0x3d4b950[label="D:0.00ns L:0",color=blue];
Node0x3d4b950 -> Node0x3d4b950[label="D:0.00ns L:0",color=blue];
Node0x3d4ba30[label="  %40 = load i32* %39, align 4, !tbaa !1"];
Node0x3d4ba30 -> Node0x3d4ba30[label="D:0.00ns L:2",color=blue];
Node0x3d4ba30 -> Node0x3d4bdf0[label="D:0.00ns L:2",color=red];
Node0x3d4bb10[label="  %41 = mul nsw i32 %40, 255"];
Node0x3d4bb10 -> Node0x3d4bb10[label="D:2.59ns L:1",color=blue];
Node0x3d4bc30[label="  %42 = ashr i32 %41, 8"];
Node0x3d4bc30 -> Node0x3d4bc30[label="D:0.00ns L:0",color=blue];
Node0x3d4bd10[label="  %43 = add nsw i32 %38, %42"];
Node0x3d4bd10 -> Node0x3d4bd10[label="D:2.50ns L:0",color=blue];
Node0x3d4bdf0 -> Node0x3d48ee0[label="D:20.00ns L:1",color=red];
Node0x3d4bdf0 -> Node0x3d4cf00[label="D:20.00ns L:1",color=red];
Node0x3d48d80[label="  %44 = getelementptr inbounds i32* %dlt..."];
Node0x3d48d80 -> Node0x3d48d80[label="D:0.00ns L:0",color=blue];
Node0x3d48d80 -> Node0x3d48d80[label="D:0.00ns L:0",color=blue];
Node0x3d48ee0 -> Node0x3d48ee0[label="D:0.00ns L:2",color=blue];
Node0x3d48ee0 -> Node0x3d4cd40[label="D:0.00ns L:2",color=red];
Node0x3d48ee0 -> Node0x3d4d880[label="D:0.00ns L:2",color=red];
Node0x3d48fc0[label="  %46 = mul nsw i32 %45, %dlt"];
Node0x3d48fc0 -> Node0x3d48fc0[label="D:2.59ns L:1",color=blue];
Node0x3d4c6e0[label="  %47 = ashr i32 %46, 31"];
Node0x3d4c6e0 -> Node0x3d4c6e0[label="D:0.00ns L:0",color=blue];
Node0x3d4c7c0[label="  %48 = and i32 %47, -256"];
Node0x3d4c7c0 -> Node0x3d4c7c0[label="D:0.00ns L:0",color=blue];
Node0x3d4c8a0[label="  %49 = or i32 %48, 128"];
Node0x3d4c8a0 -> Node0x3d4c8a0[label="D:0.00ns L:0",color=blue];
Node0x3d4c980[label="  %50 = getelementptr inbounds i32* %bli..."];
Node0x3d4c980 -> Node0x3d4c980[label="D:0.00ns L:0",color=blue];
Node0x3d4c980 -> Node0x3d4c980[label="D:0.00ns L:0",color=blue];
Node0x3d4ca60[label="  %51 = load i32* %50, align 4, !tbaa !1"];
Node0x3d4ca60 -> Node0x3d4ca60[label="D:0.00ns L:2",color=blue];
Node0x3d4ca60 -> Node0x3d4cd40[label="D:0.00ns L:2",color=red];
Node0x3d490a0[label="  %52 = mul nsw i32 %51, 255"];
Node0x3d490a0 -> Node0x3d490a0[label="D:2.59ns L:1",color=blue];
Node0x3d4cb80[label="  %53 = ashr i32 %52, 8"];
Node0x3d4cb80 -> Node0x3d4cb80[label="D:0.00ns L:0",color=blue];
Node0x3d4cc60[label="  %54 = add nsw i32 %49, %53"];
Node0x3d4cc60 -> Node0x3d4cc60[label="D:2.50ns L:0",color=blue];
Node0x3d4cd40 -> Node0x3d4cf00[label="D:20.00ns L:1",color=red];
Node0x3d4ce20[label="  %55 = getelementptr inbounds i32* %dlt..."];
Node0x3d4ce20 -> Node0x3d4ce20[label="D:0.00ns L:0",color=blue];
Node0x3d4ce20 -> Node0x3d4ce20[label="D:0.00ns L:0",color=blue];
Node0x3d4cf00 -> Node0x3d4cf00[label="D:0.00ns L:2",color=blue];
Node0x3d4cf00 -> Node0x3d4d880[label="D:0.00ns L:2",color=red];
Node0x3d4cfe0[label="  %57 = mul nsw i32 %56, %dlt"];
Node0x3d4cfe0 -> Node0x3d4cfe0[label="D:2.59ns L:1",color=blue];
Node0x3d4d140[label="  %58 = ashr i32 %57, 31"];
Node0x3d4d140 -> Node0x3d4d140[label="D:0.00ns L:0",color=blue];
Node0x3d4d220[label="  %59 = and i32 %58, -256"];
Node0x3d4d220 -> Node0x3d4d220[label="D:0.00ns L:0",color=blue];
Node0x3d4d300[label="  %60 = or i32 %59, 128"];
Node0x3d4d300 -> Node0x3d4d300[label="D:0.00ns L:0",color=blue];
Node0x3d4d3e0[label="  %61 = getelementptr inbounds i32* %bli..."];
Node0x3d4d3e0 -> Node0x3d4d3e0[label="D:0.00ns L:0",color=blue];
Node0x3d4d3e0 -> Node0x3d4d3e0[label="D:0.00ns L:0",color=blue];
Node0x3d4d4c0[label="  %62 = load i32* %61, align 4, !tbaa !1"];
Node0x3d4d4c0 -> Node0x3d4d4c0[label="D:0.00ns L:2",color=blue];
Node0x3d4d4c0 -> Node0x3d4d880[label="D:0.00ns L:2",color=red];
Node0x3d4d5a0[label="  %63 = mul nsw i32 %62, 255"];
Node0x3d4d5a0 -> Node0x3d4d5a0[label="D:2.59ns L:1",color=blue];
Node0x3d4d6c0[label="  %64 = ashr i32 %63, 8"];
Node0x3d4d6c0 -> Node0x3d4d6c0[label="D:0.00ns L:0",color=blue];
Node0x3d4d7a0[label="  %65 = add nsw i32 %60, %64"];
Node0x3d4d7a0 -> Node0x3d4d7a0[label="D:2.50ns L:0",color=blue];
}
