//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jun 19 18:41:14 2016
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Sat Sep  3 13:03:19 2016
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             
unsigned_divide_32            1                             

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %3 = load volatile i32* %sce... (idx: 0)        10                            10                            
  %5 = load volatile i32* %sce... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %3 = load volatile i32* %sce... (idx: 0)        1                             0                             
  %5 = load volatile i32* %sce... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %3 = load volatile i32* %sce... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %5 = load volatile i32* %sce... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %8 = load volatile i32* %sce... (idx: 0)        11                            11                            
  %11 = load volatile i32* %sc... (idx: 1)        11                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %8 = load volatile i32* %sce... (idx: 0)        1                             0                             
  %11 = load volatile i32* %sc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %8 = load volatile i32* %sce... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
  %11 = load volatile i32* %sc... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %14 = load volatile i32* %sc... (idx: 0)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %14 = load volatile i32* %sc... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %14 = load volatile i32* %sc... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__1
Binding functional unit type: unsigned_divide_32
Weight matrix for operation/function unit matching:
                                                  main_unsigned_divide_32_0     
  %4 = udiv i32 %3, 23412 (idx: 0)                10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_unsigned_divide_32_0     
  %4 = udiv i32 %3, 23412 (idx: 0)                1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %4 = udiv i32 %3, 23412 (idx: 0) -> main_unsigned_divide_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB__1
Binding functional unit type: unsigned_divide_32
Weight matrix for operation/function unit matching:
                                                  main_unsigned_divide_32_0     
  %6 = udiv i32 %5, 45064 (idx: 0)                11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_unsigned_divide_32_0     
  %6 = udiv i32 %5, 45064 (idx: 0)                1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %6 = udiv i32 %5, 45064 (idx: 0) -> main_unsigned_divide_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB__1
Binding functional unit type: unsigned_divide_32
Weight matrix for operation/function unit matching:
  %9 = udiv i32 %8, 2141 can share an output register with another operation already assigned to main_unsigned_divide_32_0
                                                  main_unsigned_divide_32_0     
  %9 = udiv i32 %8, 2141 (idx: 0)                 7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_unsigned_divide_32_0     
  %9 = udiv i32 %8, 2141 (idx: 0)                 1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %9 = udiv i32 %8, 2141 (idx: 0) -> main_unsigned_divide_32_0 (mux inputs: 3)
State: LEGUP_F_main_BB__1
Binding functional unit type: unsigned_divide_32
Weight matrix for operation/function unit matching:
  %12 = udiv i32 %11, 3262 can share an output register with another operation already assigned to main_unsigned_divide_32_0
                                                  main_unsigned_divide_32_0     
  %12 = udiv i32 %11, 3262 (idx: 0)               8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_unsigned_divide_32_0     
  %12 = udiv i32 %11, 3262 (idx: 0)               1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %12 = udiv i32 %11, 3262 (idx: 0) -> main_unsigned_divide_32_0 (mux inputs: 4)
State: LEGUP_F_main_BB__1
Binding functional unit type: unsigned_divide_32
Weight matrix for operation/function unit matching:
  %15 = udiv i32 %14, 3141 can share an output register with another operation already assigned to main_unsigned_divide_32_0
                                                  main_unsigned_divide_32_0     
  %15 = udiv i32 %14, 3141 (idx: 0)               9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_unsigned_divide_32_0     
  %15 = udiv i32 %14, 3141 (idx: 0)               1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %15 = udiv i32 %14, 3141 (idx: 0) -> main_unsigned_divide_32_0 (mux inputs: 5)

