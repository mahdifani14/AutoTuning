//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Target Instruction Enum Values
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//


#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace Mips {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    PROLOG_LABEL	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    ADD	= 14,
    ADDi	= 15,
    ADDiu	= 16,
    ADDu	= 17,
    ADJCALLSTACKDOWN	= 18,
    ADJCALLSTACKUP	= 19,
    AND	= 20,
    ANDi	= 21,
    ATMACRO	= 22,
    ATOMIC_CMP_SWAP_I16	= 23,
    ATOMIC_CMP_SWAP_I32	= 24,
    ATOMIC_CMP_SWAP_I8	= 25,
    ATOMIC_LOAD_ADD_I16	= 26,
    ATOMIC_LOAD_ADD_I32	= 27,
    ATOMIC_LOAD_ADD_I8	= 28,
    ATOMIC_LOAD_AND_I16	= 29,
    ATOMIC_LOAD_AND_I32	= 30,
    ATOMIC_LOAD_AND_I8	= 31,
    ATOMIC_LOAD_NAND_I16	= 32,
    ATOMIC_LOAD_NAND_I32	= 33,
    ATOMIC_LOAD_NAND_I8	= 34,
    ATOMIC_LOAD_OR_I16	= 35,
    ATOMIC_LOAD_OR_I32	= 36,
    ATOMIC_LOAD_OR_I8	= 37,
    ATOMIC_LOAD_SUB_I16	= 38,
    ATOMIC_LOAD_SUB_I32	= 39,
    ATOMIC_LOAD_SUB_I8	= 40,
    ATOMIC_LOAD_XOR_I16	= 41,
    ATOMIC_LOAD_XOR_I32	= 42,
    ATOMIC_LOAD_XOR_I8	= 43,
    ATOMIC_SWAP_I16	= 44,
    ATOMIC_SWAP_I32	= 45,
    ATOMIC_SWAP_I8	= 46,
    BC1F	= 47,
    BC1FL	= 48,
    BC1T	= 49,
    BC1TL	= 50,
    BEQ	= 51,
    BGEZ	= 52,
    BGEZAL	= 53,
    BGTZ	= 54,
    BLEZ	= 55,
    BLTZ	= 56,
    BLTZAL	= 57,
    BNE	= 58,
    BuildPairF64	= 59,
    CEIL_LD	= 60,
    CEIL_LS	= 61,
    CEIL_W_D32	= 62,
    CEIL_W_S32	= 63,
    CFC1	= 64,
    CLO	= 65,
    CLZ	= 66,
    CPLOAD	= 67,
    CPRESTORE	= 68,
    CTC1	= 69,
    CVTD_L32	= 70,
    CVTD_S32	= 71,
    CVTD_W32	= 72,
    CVTL_D	= 73,
    CVTL_S	= 74,
    CVTS_D32	= 75,
    CVTS_L32	= 76,
    CVTS_W32	= 77,
    CVTW_D32	= 78,
    CVTW_S32	= 79,
    DynAlloc	= 80,
    ExtractElementF64	= 81,
    FABS_D32	= 82,
    FABS_S32	= 83,
    FADD_D32	= 84,
    FADD_S32	= 85,
    FCMP_D32	= 86,
    FCMP_S32	= 87,
    FDIV_D32	= 88,
    FDIV_S32	= 89,
    FLOOR_LD	= 90,
    FLOOR_LS	= 91,
    FLOOR_W_D32	= 92,
    FLOOR_W_S32	= 93,
    FMOV_D32	= 94,
    FMOV_S32	= 95,
    FMUL_D32	= 96,
    FMUL_S32	= 97,
    FNEG_D32	= 98,
    FNEG_S32	= 99,
    FSQRT_D32	= 100,
    FSQRT_S32	= 101,
    FSUB_D32	= 102,
    FSUB_S32	= 103,
    J	= 104,
    JAL	= 105,
    JALR	= 106,
    JR	= 107,
    LB	= 108,
    LBu	= 109,
    LDC1	= 110,
    LEA_ADDiu	= 111,
    LH	= 112,
    LHu	= 113,
    LL	= 114,
    LUi	= 115,
    LW	= 116,
    LWC1	= 117,
    MACRO	= 118,
    MADD	= 119,
    MADDU	= 120,
    MFC1	= 121,
    MFHI	= 122,
    MFLO	= 123,
    MOVCCRToCCR	= 124,
    MOVF	= 125,
    MOVF_D	= 126,
    MOVF_S	= 127,
    MOVN_D	= 128,
    MOVN_I	= 129,
    MOVN_S	= 130,
    MOVT	= 131,
    MOVT_D	= 132,
    MOVT_S	= 133,
    MOVZ_D	= 134,
    MOVZ_I	= 135,
    MOVZ_S	= 136,
    MSUB	= 137,
    MSUBU	= 138,
    MTC1	= 139,
    MTHI	= 140,
    MTLO	= 141,
    MUL	= 142,
    MULT	= 143,
    MULTu	= 144,
    NOAT	= 145,
    NOMACRO	= 146,
    NOP	= 147,
    NOR	= 148,
    NOREORDER	= 149,
    OR	= 150,
    ORi	= 151,
    RDHWR	= 152,
    REORDER	= 153,
    RET	= 154,
    ROTR	= 155,
    ROTRV	= 156,
    ROUND_LD	= 157,
    ROUND_LS	= 158,
    ROUND_W_D32	= 159,
    ROUND_W_S32	= 160,
    SB	= 161,
    SC	= 162,
    SDC1	= 163,
    SDIV	= 164,
    SEB	= 165,
    SEH	= 166,
    SH	= 167,
    SLL	= 168,
    SLLV	= 169,
    SLT	= 170,
    SLTi	= 171,
    SLTiu	= 172,
    SLTu	= 173,
    SRA	= 174,
    SRAV	= 175,
    SRL	= 176,
    SRLV	= 177,
    SUB	= 178,
    SUBu	= 179,
    SW	= 180,
    SWC1	= 181,
    SYNC	= 182,
    TRUNC_LD	= 183,
    TRUNC_LS	= 184,
    TRUNC_W_D32	= 185,
    TRUNC_W_S32	= 186,
    UDIV	= 187,
    WSBW	= 188,
    XOR	= 189,
    XORi	= 190,
    INSTRUCTION_LIST_END = 191
  };
}
} // End llvm namespace 
#endif // GET_INSTRINFO_ENUM

//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Target Instruction Descriptors
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//


#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const unsigned ImplicitList1[] = { Mips::SP, 0 };
static const unsigned ImplicitList2[] = { Mips::FCR31, 0 };
static const unsigned ImplicitList3[] = { Mips::GP, 0 };
static const unsigned ImplicitList4[] = { Mips::AT, Mips::V0, Mips::V1, Mips::A0, Mips::A1, Mips::A2, Mips::A3, Mips::T0, Mips::T1, Mips::T2, Mips::T3, Mips::T4, Mips::T5, Mips::T6, Mips::T7, Mips::T8, Mips::T9, Mips::K0, Mips::K1, Mips::D0, Mips::D1, Mips::D2, Mips::D3, Mips::D4, Mips::D5, Mips::D6, Mips::D7, Mips::D8, Mips::D9, 0 };
static const unsigned ImplicitList5[] = { Mips::HI, Mips::LO, 0 };
static const unsigned ImplicitList6[] = { Mips::HI, 0 };
static const unsigned ImplicitList7[] = { Mips::LO, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo8[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo9[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo10[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo11[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo12[] = { { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo13[] = { { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo14[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo15[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo16[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CCRRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo17[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo18[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo19[] = { { Mips::CCRRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo20[] = { { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo21[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo22[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo23[] = { { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo24[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo25[] = { { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo26[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo27[] = { { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo28[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo29[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo30[] = { { Mips::CCRRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CCRRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo31[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo32[] = { { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo33[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo34[] = { { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::AFGR64RegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo35[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo36[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::FGR32RegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo37[] = { { Mips::FGR32RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo38[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::HWRegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo39[] = { { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, { Mips::CPURegsRegClassID, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };

MCInstrDesc MipsInsts[] = {
  { 0,	0,	0,	20,	0,	"PHI", 0|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #0 = PHI
  { 1,	0,	0,	20,	0,	"INLINEASM", 0|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #1 = INLINEASM
  { 2,	1,	0,	20,	0,	"PROLOG_LABEL", 0|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #2 = PROLOG_LABEL
  { 3,	1,	0,	20,	0,	"EH_LABEL", 0|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	20,	0,	"GC_LABEL", 0|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	20,	0,	"KILL", 0|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #5 = KILL
  { 6,	3,	1,	20,	0,	"EXTRACT_SUBREG", 0, 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	20,	0,	"INSERT_SUBREG", 0, 0x0ULL, NULL, NULL, OperandInfo4 },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	20,	0,	"IMPLICIT_DEF", 0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	20,	0,	"SUBREG_TO_REG", 0, 0x0ULL, NULL, NULL, OperandInfo6 },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	20,	0,	"COPY_TO_REGCLASS", 0|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	20,	0,	"DBG_VALUE", 0|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #11 = DBG_VALUE
  { 12,	1,	1,	20,	0,	"REG_SEQUENCE", 0|(1<<MCID::Variadic)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	20,	0,	"COPY", 0|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo7 },  // Inst #13 = COPY
  { 14,	3,	1,	0,	0,	"ADD", 0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #14 = ADD
  { 15,	3,	1,	0,	0,	"ADDi", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #15 = ADDi
  { 16,	3,	1,	0,	0,	"ADDiu", 0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #16 = ADDiu
  { 17,	3,	1,	0,	0,	"ADDu", 0|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #17 = ADDu
  { 18,	1,	0,	17,	0,	"ADJCALLSTACKDOWN", 0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo5 },  // Inst #18 = ADJCALLSTACKDOWN
  { 19,	2,	0,	17,	0,	"ADJCALLSTACKUP", 0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo7 },  // Inst #19 = ADJCALLSTACKUP
  { 20,	3,	1,	0,	0,	"AND", 0|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #20 = AND
  { 21,	3,	1,	0,	0,	"ANDi", 0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #21 = ANDi
  { 22,	0,	0,	17,	0,	"ATMACRO", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #22 = ATMACRO
  { 23,	4,	1,	17,	0,	"ATOMIC_CMP_SWAP_I16", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo10 },  // Inst #23 = ATOMIC_CMP_SWAP_I16
  { 24,	4,	1,	17,	0,	"ATOMIC_CMP_SWAP_I32", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo10 },  // Inst #24 = ATOMIC_CMP_SWAP_I32
  { 25,	4,	1,	17,	0,	"ATOMIC_CMP_SWAP_I8", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo10 },  // Inst #25 = ATOMIC_CMP_SWAP_I8
  { 26,	3,	1,	17,	0,	"ATOMIC_LOAD_ADD_I16", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #26 = ATOMIC_LOAD_ADD_I16
  { 27,	3,	1,	17,	0,	"ATOMIC_LOAD_ADD_I32", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #27 = ATOMIC_LOAD_ADD_I32
  { 28,	3,	1,	17,	0,	"ATOMIC_LOAD_ADD_I8", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #28 = ATOMIC_LOAD_ADD_I8
  { 29,	3,	1,	17,	0,	"ATOMIC_LOAD_AND_I16", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #29 = ATOMIC_LOAD_AND_I16
  { 30,	3,	1,	17,	0,	"ATOMIC_LOAD_AND_I32", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #30 = ATOMIC_LOAD_AND_I32
  { 31,	3,	1,	17,	0,	"ATOMIC_LOAD_AND_I8", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #31 = ATOMIC_LOAD_AND_I8
  { 32,	3,	1,	17,	0,	"ATOMIC_LOAD_NAND_I16", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #32 = ATOMIC_LOAD_NAND_I16
  { 33,	3,	1,	17,	0,	"ATOMIC_LOAD_NAND_I32", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #33 = ATOMIC_LOAD_NAND_I32
  { 34,	3,	1,	17,	0,	"ATOMIC_LOAD_NAND_I8", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #34 = ATOMIC_LOAD_NAND_I8
  { 35,	3,	1,	17,	0,	"ATOMIC_LOAD_OR_I16", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #35 = ATOMIC_LOAD_OR_I16
  { 36,	3,	1,	17,	0,	"ATOMIC_LOAD_OR_I32", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #36 = ATOMIC_LOAD_OR_I32
  { 37,	3,	1,	17,	0,	"ATOMIC_LOAD_OR_I8", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #37 = ATOMIC_LOAD_OR_I8
  { 38,	3,	1,	17,	0,	"ATOMIC_LOAD_SUB_I16", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #38 = ATOMIC_LOAD_SUB_I16
  { 39,	3,	1,	17,	0,	"ATOMIC_LOAD_SUB_I32", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #39 = ATOMIC_LOAD_SUB_I32
  { 40,	3,	1,	17,	0,	"ATOMIC_LOAD_SUB_I8", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #40 = ATOMIC_LOAD_SUB_I8
  { 41,	3,	1,	17,	0,	"ATOMIC_LOAD_XOR_I16", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #41 = ATOMIC_LOAD_XOR_I16
  { 42,	3,	1,	17,	0,	"ATOMIC_LOAD_XOR_I32", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #42 = ATOMIC_LOAD_XOR_I32
  { 43,	3,	1,	17,	0,	"ATOMIC_LOAD_XOR_I8", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #43 = ATOMIC_LOAD_XOR_I8
  { 44,	3,	1,	17,	0,	"ATOMIC_SWAP_I16", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #44 = ATOMIC_SWAP_I16
  { 45,	3,	1,	17,	0,	"ATOMIC_SWAP_I32", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #45 = ATOMIC_SWAP_I32
  { 46,	3,	1,	17,	0,	"ATOMIC_SWAP_I8", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #46 = ATOMIC_SWAP_I8
  { 47,	1,	0,	20,	0,	"BC1F", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x0ULL, ImplicitList2, NULL, OperandInfo5 },  // Inst #47 = BC1F
  { 48,	1,	0,	20,	0,	"BC1FL", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x0ULL, ImplicitList2, NULL, OperandInfo5 },  // Inst #48 = BC1FL
  { 49,	1,	0,	20,	0,	"BC1T", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x0ULL, ImplicitList2, NULL, OperandInfo5 },  // Inst #49 = BC1T
  { 50,	1,	0,	20,	0,	"BC1TL", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x0ULL, ImplicitList2, NULL, OperandInfo5 },  // Inst #50 = BC1TL
  { 51,	3,	0,	1,	0,	"BEQ", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #51 = BEQ
  { 52,	2,	0,	1,	0,	"BGEZ", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #52 = BGEZ
  { 53,	2,	0,	1,	0,	"BGEZAL", 0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList4, OperandInfo11 },  // Inst #53 = BGEZAL
  { 54,	2,	0,	1,	0,	"BGTZ", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #54 = BGTZ
  { 55,	2,	0,	1,	0,	"BLEZ", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #55 = BLEZ
  { 56,	2,	0,	1,	0,	"BLTZ", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #56 = BLTZ
  { 57,	2,	0,	1,	0,	"BLTZAL", 0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList4, OperandInfo11 },  // Inst #57 = BLTZAL
  { 58,	3,	0,	1,	0,	"BNE", 0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #58 = BNE
  { 59,	3,	1,	17,	0,	"BuildPairF64", 0, 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #59 = BuildPairF64
  { 60,	2,	1,	20,	0,	"CEIL_LD", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #60 = CEIL_LD
  { 61,	2,	1,	20,	0,	"CEIL_LS", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #61 = CEIL_LS
  { 62,	2,	1,	20,	0,	"CEIL_W_D32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #62 = CEIL_W_D32
  { 63,	2,	1,	20,	0,	"CEIL_W_S32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #63 = CEIL_W_S32
  { 64,	2,	1,	20,	0,	"CFC1", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #64 = CFC1
  { 65,	2,	1,	0,	0,	"CLO", 0, 0x0ULL, NULL, NULL, OperandInfo17 },  // Inst #65 = CLO
  { 66,	2,	1,	0,	0,	"CLZ", 0, 0x0ULL, NULL, NULL, OperandInfo17 },  // Inst #66 = CLZ
  { 67,	1,	0,	17,	0,	"CPLOAD", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #67 = CPLOAD
  { 68,	1,	0,	17,	0,	"CPRESTORE", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #68 = CPRESTORE
  { 69,	2,	1,	20,	0,	"CTC1", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #69 = CTC1
  { 70,	2,	1,	20,	0,	"CVTD_L32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #70 = CVTD_L32
  { 71,	2,	1,	20,	0,	"CVTD_S32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #71 = CVTD_S32
  { 72,	2,	1,	20,	0,	"CVTD_W32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #72 = CVTD_W32
  { 73,	2,	1,	20,	0,	"CVTL_D", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #73 = CVTL_D
  { 74,	2,	1,	20,	0,	"CVTL_S", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #74 = CVTL_S
  { 75,	2,	1,	20,	0,	"CVTS_D32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #75 = CVTS_D32
  { 76,	2,	1,	20,	0,	"CVTS_L32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #76 = CVTS_L32
  { 77,	2,	1,	20,	0,	"CVTS_W32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #77 = CVTS_W32
  { 78,	2,	1,	20,	0,	"CVTW_D32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #78 = CVTW_D32
  { 79,	2,	1,	20,	0,	"CVTW_S32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #79 = CVTW_S32
  { 80,	3,	1,	0,	0,	"DynAlloc", 0, 0x0ULL, ImplicitList1, NULL, OperandInfo21 },  // Inst #80 = DynAlloc
  { 81,	3,	1,	17,	0,	"ExtractElementF64", 0, 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #81 = ExtractElementF64
  { 82,	2,	1,	20,	0,	"FABS_D32", 0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #82 = FABS_D32
  { 83,	2,	1,	20,	0,	"FABS_S32", 0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #83 = FABS_S32
  { 84,	3,	1,	20,	0,	"FADD_D32", 0|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #84 = FADD_D32
  { 85,	3,	1,	20,	0,	"FADD_S32", 0|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #85 = FADD_S32
  { 86,	3,	0,	20,	0,	"FCMP_D32", 0|(1<<MCID::DelaySlot), 0x0ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #86 = FCMP_D32
  { 87,	3,	0,	20,	0,	"FCMP_S32", 0|(1<<MCID::DelaySlot), 0x0ULL, NULL, ImplicitList2, OperandInfo26 },  // Inst #87 = FCMP_S32
  { 88,	3,	1,	20,	0,	"FDIV_D32", 0, 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #88 = FDIV_D32
  { 89,	3,	1,	20,	0,	"FDIV_S32", 0, 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #89 = FDIV_S32
  { 90,	2,	1,	20,	0,	"FLOOR_LD", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #90 = FLOOR_LD
  { 91,	2,	1,	20,	0,	"FLOOR_LS", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #91 = FLOOR_LS
  { 92,	2,	1,	20,	0,	"FLOOR_W_D32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #92 = FLOOR_W_D32
  { 93,	2,	1,	20,	0,	"FLOOR_W_S32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #93 = FLOOR_W_S32
  { 94,	2,	1,	20,	0,	"FMOV_D32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #94 = FMOV_D32
  { 95,	2,	1,	20,	0,	"FMOV_S32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #95 = FMOV_S32
  { 96,	3,	1,	20,	0,	"FMUL_D32", 0|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #96 = FMUL_D32
  { 97,	3,	1,	20,	0,	"FMUL_S32", 0|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #97 = FMUL_S32
  { 98,	2,	1,	20,	0,	"FNEG_D32", 0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #98 = FNEG_D32
  { 99,	2,	1,	20,	0,	"FNEG_S32", 0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #99 = FNEG_S32
  { 100,	2,	1,	20,	0,	"FSQRT_D32", 0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #100 = FSQRT_D32
  { 101,	2,	1,	20,	0,	"FSQRT_S32", 0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #101 = FSQRT_S32
  { 102,	3,	1,	20,	0,	"FSUB_D32", 0, 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #102 = FSUB_D32
  { 103,	3,	1,	20,	0,	"FSUB_S32", 0, 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #103 = FSUB_S32
  { 104,	1,	0,	1,	0,	"J", 0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #104 = J
  { 105,	1,	0,	1,	0,	"JAL", 0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Variadic), 0x0ULL, ImplicitList3, ImplicitList4, OperandInfo5 },  // Inst #105 = JAL
  { 106,	1,	0,	1,	0,	"JALR", 0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Variadic), 0x0ULL, ImplicitList3, ImplicitList4, OperandInfo18 },  // Inst #106 = JALR
  { 107,	1,	0,	1,	0,	"JR", 0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #107 = JR
  { 108,	3,	1,	16,	0,	"LB", 0|(1<<MCID::DelaySlot)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #108 = LB
  { 109,	3,	1,	16,	0,	"LBu", 0|(1<<MCID::DelaySlot)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #109 = LBu
  { 110,	3,	1,	20,	0,	"LDC1", 0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo27 },  // Inst #110 = LDC1
  { 111,	3,	1,	0,	0,	"LEA_ADDiu", 0, 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #111 = LEA_ADDiu
  { 112,	3,	1,	16,	0,	"LH", 0|(1<<MCID::DelaySlot)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #112 = LH
  { 113,	3,	1,	16,	0,	"LHu", 0|(1<<MCID::DelaySlot)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #113 = LHu
  { 114,	3,	1,	16,	0,	"LL", 0|(1<<MCID::DelaySlot)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #114 = LL
  { 115,	2,	1,	0,	0,	"LUi", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #115 = LUi
  { 116,	3,	1,	16,	0,	"LW", 0|(1<<MCID::DelaySlot)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #116 = LW
  { 117,	3,	1,	20,	0,	"LWC1", 0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #117 = LWC1
  { 118,	0,	0,	17,	0,	"MACRO", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #118 = MACRO
  { 119,	2,	0,	15,	0,	"MADD", 0|(1<<MCID::Commutable), 0x0ULL, ImplicitList5, ImplicitList5, OperandInfo17 },  // Inst #119 = MADD
  { 120,	2,	0,	15,	0,	"MADDU", 0|(1<<MCID::Commutable), 0x0ULL, ImplicitList5, ImplicitList5, OperandInfo17 },  // Inst #120 = MADDU
  { 121,	2,	1,	20,	0,	"MFC1", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo29 },  // Inst #121 = MFC1
  { 122,	1,	1,	13,	0,	"MFHI", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList6, NULL, OperandInfo18 },  // Inst #122 = MFHI
  { 123,	1,	1,	13,	0,	"MFLO", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, NULL, OperandInfo18 },  // Inst #123 = MFLO
  { 124,	2,	1,	17,	0,	"MOVCCRToCCR", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo30 },  // Inst #124 = MOVCCRToCCR
  { 125,	3,	1,	20,	0,	"MOVF", 0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo31 },  // Inst #125 = MOVF
  { 126,	3,	1,	20,	0,	"MOVF_D", 0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo32 },  // Inst #126 = MOVF_D
  { 127,	3,	1,	20,	0,	"MOVF_S", 0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo33 },  // Inst #127 = MOVF_S
  { 128,	4,	1,	20,	0,	"MOVN_D", 0|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #128 = MOVN_D
  { 129,	4,	1,	20,	0,	"MOVN_I", 0|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo35 },  // Inst #129 = MOVN_I
  { 130,	4,	1,	20,	0,	"MOVN_S", 0|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #130 = MOVN_S
  { 131,	3,	1,	20,	0,	"MOVT", 0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo31 },  // Inst #131 = MOVT
  { 132,	3,	1,	20,	0,	"MOVT_D", 0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo32 },  // Inst #132 = MOVT_D
  { 133,	3,	1,	20,	0,	"MOVT_S", 0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo33 },  // Inst #133 = MOVT_S
  { 134,	4,	1,	20,	0,	"MOVZ_D", 0|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #134 = MOVZ_D
  { 135,	4,	1,	20,	0,	"MOVZ_I", 0|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo35 },  // Inst #135 = MOVZ_I
  { 136,	4,	1,	20,	0,	"MOVZ_S", 0|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #136 = MOVZ_S
  { 137,	2,	0,	15,	0,	"MSUB", 0, 0x0ULL, ImplicitList5, ImplicitList5, OperandInfo17 },  // Inst #137 = MSUB
  { 138,	2,	0,	15,	0,	"MSUBU", 0, 0x0ULL, ImplicitList5, ImplicitList5, OperandInfo17 },  // Inst #138 = MSUBU
  { 139,	2,	1,	20,	0,	"MTC1", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #139 = MTC1
  { 140,	1,	0,	13,	0,	"MTHI", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList6, OperandInfo18 },  // Inst #140 = MTHI
  { 141,	1,	0,	13,	0,	"MTLO", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo18 },  // Inst #141 = MTLO
  { 142,	3,	1,	15,	0,	"MUL", 0|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #142 = MUL
  { 143,	2,	0,	15,	0,	"MULT", 0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList5, OperandInfo17 },  // Inst #143 = MULT
  { 144,	2,	0,	15,	0,	"MULTu", 0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList5, OperandInfo17 },  // Inst #144 = MULTu
  { 145,	0,	0,	17,	0,	"NOAT", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #145 = NOAT
  { 146,	0,	0,	17,	0,	"NOMACRO", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #146 = NOMACRO
  { 147,	0,	0,	0,	0,	"NOP", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #147 = NOP
  { 148,	3,	1,	0,	0,	"NOR", 0|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #148 = NOR
  { 149,	0,	0,	17,	0,	"NOREORDER", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #149 = NOREORDER
  { 150,	3,	1,	0,	0,	"OR", 0|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #150 = OR
  { 151,	3,	1,	0,	0,	"ORi", 0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #151 = ORi
  { 152,	2,	1,	0,	0,	"RDHWR", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #152 = RDHWR
  { 153,	0,	0,	17,	0,	"REORDER", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #153 = REORDER
  { 154,	1,	0,	1,	0,	"RET", 0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #154 = RET
  { 155,	3,	1,	0,	0,	"ROTR", 0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #155 = ROTR
  { 156,	3,	1,	0,	0,	"ROTRV", 0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #156 = ROTRV
  { 157,	2,	1,	20,	0,	"ROUND_LD", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #157 = ROUND_LD
  { 158,	2,	1,	20,	0,	"ROUND_LS", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #158 = ROUND_LS
  { 159,	2,	1,	20,	0,	"ROUND_W_D32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #159 = ROUND_W_D32
  { 160,	2,	1,	20,	0,	"ROUND_W_S32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #160 = ROUND_W_S32
  { 161,	3,	0,	18,	0,	"SB", 0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #161 = SB
  { 162,	4,	1,	18,	0,	"SC", 0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #162 = SC
  { 163,	3,	0,	20,	0,	"SDC1", 0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo27 },  // Inst #163 = SDC1
  { 164,	2,	0,	14,	0,	"SDIV", 0, 0x0ULL, NULL, ImplicitList5, OperandInfo17 },  // Inst #164 = SDIV
  { 165,	2,	1,	20,	0,	"SEB", 0, 0x0ULL, NULL, NULL, OperandInfo17 },  // Inst #165 = SEB
  { 166,	2,	1,	20,	0,	"SEH", 0, 0x0ULL, NULL, NULL, OperandInfo17 },  // Inst #166 = SEH
  { 167,	3,	0,	18,	0,	"SH", 0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #167 = SH
  { 168,	3,	1,	0,	0,	"SLL", 0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #168 = SLL
  { 169,	3,	1,	0,	0,	"SLLV", 0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #169 = SLLV
  { 170,	3,	1,	0,	0,	"SLT", 0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #170 = SLT
  { 171,	3,	1,	0,	0,	"SLTi", 0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #171 = SLTi
  { 172,	3,	1,	0,	0,	"SLTiu", 0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #172 = SLTiu
  { 173,	3,	1,	0,	0,	"SLTu", 0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #173 = SLTu
  { 174,	3,	1,	0,	0,	"SRA", 0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #174 = SRA
  { 175,	3,	1,	0,	0,	"SRAV", 0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #175 = SRAV
  { 176,	3,	1,	0,	0,	"SRL", 0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #176 = SRL
  { 177,	3,	1,	0,	0,	"SRLV", 0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #177 = SRLV
  { 178,	3,	1,	0,	0,	"SUB", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #178 = SUB
  { 179,	3,	1,	0,	0,	"SUBu", 0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #179 = SUBu
  { 180,	3,	0,	18,	0,	"SW", 0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #180 = SW
  { 181,	3,	0,	20,	0,	"SWC1", 0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #181 = SWC1
  { 182,	1,	0,	20,	0,	"SYNC", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #182 = SYNC
  { 183,	2,	1,	20,	0,	"TRUNC_LD", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #183 = TRUNC_LD
  { 184,	2,	1,	20,	0,	"TRUNC_LS", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #184 = TRUNC_LS
  { 185,	2,	1,	20,	0,	"TRUNC_W_D32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #185 = TRUNC_W_D32
  { 186,	2,	1,	20,	0,	"TRUNC_W_S32", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #186 = TRUNC_W_S32
  { 187,	2,	0,	14,	0,	"UDIV", 0, 0x0ULL, NULL, ImplicitList5, OperandInfo17 },  // Inst #187 = UDIV
  { 188,	2,	1,	20,	0,	"WSBW", 0, 0x0ULL, NULL, NULL, OperandInfo17 },  // Inst #188 = WSBW
  { 189,	3,	1,	0,	0,	"XOR", 0|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #189 = XOR
  { 190,	3,	1,	0,	0,	"XORi", 0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #190 = XORi
};

static inline void InitMipsMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(MipsInsts, 191);
}

} // End llvm namespace 
#endif // GET_INSTRINFO_MC_DESC


#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct MipsGenInstrInfo : public TargetInstrInfoImpl {
  explicit MipsGenInstrInfo(int SO = -1, int DO = -1);
};
} // End llvm namespace 
#endif // GET_INSTRINFO_HEADER


#ifdef GET_INSTRINFO_CTOR
#undef GET_INSTRINFO_CTOR
namespace llvm {
extern MCInstrDesc MipsInsts[];
MipsGenInstrInfo::MipsGenInstrInfo(int SO, int DO)
  : TargetInstrInfoImpl(SO, DO) {
  InitMCInstrInfo(MipsInsts, 191);
}
} // End llvm namespace 
#endif // GET_INSTRINFO_CTOR

